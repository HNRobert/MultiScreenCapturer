name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  setup:
    runs-on: macos-latest
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
      release_notes: ${{ steps.release_notes.outputs.NOTES }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Get version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Generate Release Notes
        id: release_notes
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s" --no-merges)
          else
            COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"- %s" --no-merges)
          fi
          
          echo "NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "Release ${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "Changes in this release:" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  build:
    needs: setup
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Set up signing
        run: |
          echo "${{ secrets.APPLE_CERTIFICATE_BASE64 }}" | base64 --decode > certificate.p12
          security create-keychain -p "" build.keychain
          security import certificate.p12 -k build.keychain -P "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-keychain-settings -t 3600 -u build.keychain
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build and Archive App
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APP_SPECIFIC_PASSWORD: ${{ secrets.APP_SPECIFIC_PASSWORD }}
        run: |
          xcodebuild clean archive \
            -project MultiScreenCapturer.xcodeproj \
            -scheme MultiScreenCapturer \
            -configuration Release \
            -archivePath ./build/MultiScreenCapturer.xcarchive \
            -destination 'generic/platform=macOS'

      - name: Create App Bundle
        run: |
          mkdir -p ./artifacts
          cp -r "./build/MultiScreenCapturer.xcarchive/Products/Applications/MultiScreen Capturer.app" ./artifacts/
          cd artifacts
          zip -r ../MultiScreenCapturer-v${{ needs.setup.outputs.version }}-macOS.zip .
          cd ..

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: MultiScreenCapturer-v${{ needs.setup.outputs.version }}-macOS.zip
          draft: false
          prerelease: false
          generate_release_notes: false
          body: ${{ needs.setup.outputs.release_notes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}