name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  setup:
    runs-on: macos-latest
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
    steps:
      - name: Get version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

  build:
    needs: setup
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Set up signing
        run: |
          echo "${{ secrets.APPLE_CERTIFICATE_BASE64 }}" | base64 --decode > certificate.p12
          security create-keychain -p "" build.keychain
          security import certificate.p12 -k build.keychain -P "${{ secrets.APPLE_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
          security list-keychains -s build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-keychain-settings -t 3600 -u build.keychain
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build and Archive App
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APP_SPECIFIC_PASSWORD: ${{ secrets.APP_SPECIFIC_PASSWORD }}
        run: |
          xcodebuild clean archive \
            -project MultiScreenCapturer.xcodeproj \
            -scheme MultiScreenCapturer \
            -configuration Release \
            -archivePath ./build/MultiScreenCapturer.xcarchive \

      - name: Create App Bundle
        run: |
          mkdir -p ./artifacts
          cp -r "./build/MultiScreenCapturer.xcarchive/Products/Applications/MultiScreen Capturer.app" ./artifacts/
          cd artifacts
          zip -r ../MultiScreenCapturer-${{ needs.setup.outputs.version }}-macos.zip .
          cd ..

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: MultiScreenCapturer-${{ needs.setup.outputs.version }}-macos.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}